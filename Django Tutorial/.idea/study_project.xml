<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="StudySettings">
    <StudyTaskManager>
      <option name="course">
        <RemoteCourse>
          <option name="adaptive" value="false" />
          <option name="additionalMaterialsUpdateDate" value="1525797942000" />
          <option name="authors">
            <list>
              <StepicUser>
                <option name="accessToken" value="" />
                <option name="firstName" value="JetBrains" />
                <option name="guest" value="false" />
                <option name="id" value="17813950" />
                <option name="lastName" value="" />
                <option name="refreshToken" value="" />
              </StepicUser>
            </list>
          </option>
          <option name="compatible" value="true" />
          <option name="courseMode" value="Study" />
          <option name="courseType" value="PyCharm" />
          <option name="customPresentableName" />
          <option name="description" value="Django Tutorial based on &lt;a href=&quot;https://tutorial.djangogirls.org/en/django_templates/&quot;&gt;Django Girls Tutorial&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/&quot;&gt;Django official documentation&lt;/a&gt;" />
          <option name="id" value="3212" />
          <option name="index" value="-1" />
          <option name="instructors">
            <list>
              <option value="17813950" />
            </list>
          </option>
          <option name="language" value="Python" />
          <option name="languageCode" value="en" />
          <option name="loadSolutions" value="true" />
          <option name="name" value="Django Tutorial" />
          <option name="public" value="true" />
          <option name="sectionIds">
            <list>
              <option value="6510" />
              <option value="6511" />
            </list>
          </option>
          <option name="stepikChangeStatus" value="Up to date" />
          <option name="type" value="pycharm5 Python" />
          <option name="updateDate" value="1525797953000" />
          <option name="items">
            <list>
              <FrameworkLesson>
                <option name="currentTaskIndex" value="6" />
                <option name="customPresentableName" />
                <option name="id" value="88662" />
                <option name="index" value="1" />
                <option name="name" value="lesson1" />
                <option name="stepikChangeStatus" value="Up to date" />
                <option name="updateDate" value="1525784160000" />
                <option name="taskList">
                  <list>
                    <EduTask>
                      <option name="additionalFiles">
                        <map />
                      </option>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&lt;h3&gt;Django settings&lt;/h3&gt;&#10;A Django settings file contains all the configuration of your Django installation. This document explains how settings work and which settings are available.&#10;&#10;&lt;br&gt;&lt;br&gt;&#10;Because a settings file is a Python module, the following apply:&#10;&lt;ul&gt;&#10;    &lt;li&gt;It doesn’t allow for Python syntax errors.&lt;/li&gt;&#10;&#10;    &lt;li&gt;It can assign settings dynamically using normal Python syntax. &lt;br/&gt;&#10;        For example:&#10;        &lt;br/&gt;&#10;    &lt;code&gt;MY_SETTING = [str(i) for i in range(30)]&lt;/code&gt;&lt;/li&gt;&#10;    &lt;li&gt;It can import values from other settings files.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;h4&gt;Available settings&lt;/h4&gt;&#10;&#10;For a full list of available settings, see the &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/ref/settings/&quot;&gt;settings reference&lt;/a&gt;.&#10;&lt;br/&gt;&lt;br/&gt;&#10;&#10;&lt;h4&gt;Task&lt;/h4&gt;&#10;It would be nice to have the correct time on our website.&#10;Visit &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt; Wikipedia's list of time zones&lt;/a&gt;  and copy your relevant time zone (TZ) (e.g. Europe/Berlin).&#10;&lt;br&gt;&#10;Modify the line that contains TIME_ZONE to choose your own timezone.&#10;&lt;br/&gt;&lt;br/&gt;&#10;&lt;br/&gt;&lt;br/&gt;&#10;&#10;&lt;p style=&quot;color:#808080&quot;&gt;For more information visit &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/settings/&quot;&gt;django documentation&lt;/a&gt;.&#10;&lt;/html&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="1" />
                      <option name="name" value="task1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="323995" />
                      <option name="stepikChangeStatus" value="Info and Content changed" />
                      <option name="testsText">
                        <map>
                          <entry key="tests.py" value="from test_helper import run_common_tests, failed, passed, get_answer_placeholders&#10;&#10;time_zones = ['Africa/Abidjan', 'Africa/Accra', 'Africa/Addis_Ababa', 'Africa/Algiers', 'Africa/Asmara',&#10;              'Africa/Asmera', 'Africa/Bamako', 'Africa/Bangui', 'Africa/Banjul', 'Africa/Bissau', 'Africa/Blantyre',&#10;              'Africa/Brazzaville', 'Africa/Bujumbura', 'Africa/Cairo', 'Africa/Casablanca', 'Africa/Ceuta',&#10;              'Africa/Conakry', 'Africa/Dakar', 'Africa/Dar_es_Salaam', 'Africa/Djibouti', 'Africa/Douala',&#10;              'Africa/El_Aaiun', 'Africa/Freetown', 'Africa/Gaborone', 'Africa/Harare', 'Africa/Johannesburg',&#10;              'Africa/Juba', 'Africa/Kampala', 'Africa/Khartoum', 'Africa/Kigali', 'Africa/Kinshasa', 'Africa/Lagos',&#10;              'Africa/Libreville', 'Africa/Lome', 'Africa/Luanda', 'Africa/Lubumbashi', 'Africa/Lusaka',&#10;              'Africa/Malabo', 'Africa/Maputo', 'Africa/Maseru', 'Africa/Mbabane', 'Africa/Mogadishu',&#10;              'Africa/Monrovia', 'Africa/Nairobi', 'Africa/Ndjamena', 'Africa/Niamey', 'Africa/Nouakchott',&#10;              'Africa/Ouagadougou', 'Africa/Porto-Novo', 'Africa/Sao_Tome', 'Africa/Timbuktu', 'Africa/Tripoli',&#10;              'Africa/Tunis', 'Africa/Windhoek', 'America/Adak', 'America/Anchorage', 'America/Anguilla',&#10;              'America/Antigua', 'America/Araguaina', 'America/Argentina/Buenos_Aires', 'America/Argentina/Catamarca',&#10;              'America/Argentina/ComodRivadavia', 'America/Argentina/Cordoba', 'America/Argentina/Jujuy',&#10;              'America/Argentina/La_Rioja', 'America/Argentina/Mendoza', 'America/Argentina/Rio_Gallegos',&#10;              'America/Argentina/Salta', 'America/Argentina/San_Juan', 'America/Argentina/San_Luis',&#10;              'America/Argentina/Tucuman', 'America/Argentina/Ushuaia', 'America/Aruba', 'America/Asuncion',&#10;              'America/Atikokan', 'America/Atka', 'America/Bahia', 'America/Bahia_Banderas', 'America/Barbados',&#10;              'America/Belem', 'America/Belize', 'America/Blanc-Sablon', 'America/Boa_Vista', 'America/Bogota',&#10;              'America/Boise', 'America/Buenos_Aires', 'America/Cambridge_Bay', 'America/Campo_Grande',&#10;              'America/Cancun', 'America/Caracas', 'America/Catamarca', 'America/Cayenne', 'America/Cayman',&#10;              'America/Chicago', 'America/Chihuahua', 'America/Coral_Harbour', 'America/Cordoba', 'America/Costa_Rica',&#10;              'America/Creston', 'America/Cuiaba', 'America/Curacao', 'America/Danmarkshavn', 'America/Dawson',&#10;              'America/Dawson_Creek', 'America/Denver', 'America/Detroit', 'America/Dominica', 'America/Edmonton',&#10;              'America/Eirunepe', 'America/El_Salvador', 'America/Ensenada', 'America/Fort_Wayne', 'America/Fortaleza',&#10;              'America/Glace_Bay', 'America/Godthab', 'America/Goose_Bay', 'America/Grand_Turk', 'America/Grenada',&#10;              'America/Guadeloupe', 'America/Guatemala', 'America/Guayaquil', 'America/Guyana', 'America/Halifax',&#10;              'America/Havana', 'America/Hermosillo', 'America/Indiana/Indianapolis', 'America/Indiana/Knox',&#10;              'America/Indiana/Marengo', 'America/Indiana/Petersburg', 'America/Indiana/Tell_City',&#10;              'America/Indiana/Vevay', 'America/Indiana/Vincennes', 'America/Indiana/Winamac', 'America/Indianapolis',&#10;              'America/Inuvik', 'America/Iqaluit', 'America/Jamaica', 'America/Jujuy', 'America/Juneau',&#10;              'America/Kentucky/Louisville', 'America/Kentucky/Monticello', 'America/Knox_IN', 'America/Kralendijk',&#10;              'America/La_Paz', 'America/Lima', 'America/Los_Angeles', 'America/Louisville', 'America/Lower_Princes',&#10;              'America/Maceio', 'America/Managua', 'America/Manaus', 'America/Marigot', 'America/Martinique',&#10;              'America/Matamoros', 'America/Mazatlan', 'America/Mendoza', 'America/Menominee', 'America/Merida',&#10;              'America/Metlakatla', 'America/Mexico_City', 'America/Miquelon', 'America/Moncton', 'America/Monterrey',&#10;              'America/Montevideo', 'America/Montreal', 'America/Montserrat', 'America/Nassau', 'America/New_York',&#10;              'America/Nipigon', 'America/Nome', 'America/Noronha', 'America/North_Dakota/Beulah',&#10;              'America/North_Dakota/Center', 'America/North_Dakota/New_Salem', 'America/Ojinaga', 'America/Panama',&#10;              'America/Pangnirtung', 'America/Paramaribo', 'America/Phoenix', 'America/Port-au-Prince',&#10;              'America/Port_of_Spain', 'America/Porto_Acre', 'America/Porto_Velho', 'America/Puerto_Rico',&#10;              'America/Rainy_River', 'America/Rankin_Inlet', 'America/Recife', 'America/Regina', 'America/Resolute',&#10;              'America/Rio_Branco', 'America/Rosario', 'America/Santa_Isabel', 'America/Santarem', 'America/Santiago',&#10;              'America/Santo_Domingo', 'America/Sao_Paulo', 'America/Scoresbysund', 'America/Shiprock', 'America/Sitka',&#10;              'America/St_Barthelemy', 'America/St_Johns', 'America/St_Kitts', 'America/St_Lucia', 'America/St_Thomas',&#10;              'America/St_Vincent', 'America/Swift_Current', 'America/Tegucigalpa', 'America/Thule',&#10;              'America/Thunder_Bay', 'America/Tijuana', 'America/Toronto', 'America/Tortola', 'America/Vancouver',&#10;              'America/Virgin', 'America/Whitehorse', 'America/Winnipeg', 'America/Yakutat', 'America/Yellowknife',&#10;              'Antarctica/Casey', 'Antarctica/Davis', 'Antarctica/DumontDUrville', 'Antarctica/Macquarie',&#10;              'Antarctica/Mawson', 'Antarctica/McMurdo', 'Antarctica/Palmer', 'Antarctica/Rothera',&#10;              'Antarctica/South_Pole', 'Antarctica/Syowa', 'Antarctica/Vostok', 'Arctic/Longyearbyen', 'Asia/Aden',&#10;              'Asia/Almaty', 'Asia/Amman', 'Asia/Anadyr', 'Asia/Aqtau', 'Asia/Aqtobe', 'Asia/Ashgabat',&#10;              'Asia/Ashkhabad', 'Asia/Baghdad', 'Asia/Bahrain', 'Asia/Baku', 'Asia/Bangkok', 'Asia/Beirut',&#10;              'Asia/Bishkek', 'Asia/Brunei', 'Asia/Calcutta', 'Asia/Choibalsan', 'Asia/Chongqing', 'Asia/Chungking',&#10;              'Asia/Colombo', 'Asia/Dacca', 'Asia/Damascus', 'Asia/Dhaka', 'Asia/Dili', 'Asia/Dubai', 'Asia/Dushanbe',&#10;              'Asia/Gaza', 'Asia/Harbin', 'Asia/Hebron', 'Asia/Ho_Chi_Minh', 'Asia/Hong_Kong', 'Asia/Hovd',&#10;              'Asia/Irkutsk', 'Asia/Istanbul', 'Asia/Jakarta', 'Asia/Jayapura', 'Asia/Jerusalem', 'Asia/Kabul',&#10;              'Asia/Kamchatka', 'Asia/Karachi', 'Asia/Kashgar', 'Asia/Kathmandu', 'Asia/Katmandu', 'Asia/Kolkata',&#10;              'Asia/Krasnoyarsk', 'Asia/Kuala_Lumpur', 'Asia/Kuching', 'Asia/Kuwait', 'Asia/Macao', 'Asia/Macau',&#10;              'Asia/Magadan', 'Asia/Makassar', 'Asia/Manila', 'Asia/Muscat', 'Asia/Nicosia', 'Asia/Novokuznetsk',&#10;              'Asia/Novosibirsk', 'Asia/Omsk', 'Asia/Oral', 'Asia/Phnom_Penh', 'Asia/Pontianak', 'Asia/Pyongyang',&#10;              'Asia/Qatar', 'Asia/Qyzylorda', 'Asia/Rangoon', 'Asia/Riyadh', 'Asia/Saigon', 'Asia/Sakhalin',&#10;              'Asia/Samarkand', 'Asia/Seoul', 'Asia/Shanghai', 'Asia/Singapore', 'Asia/Taipei', 'Asia/Tashkent',&#10;              'Asia/Tbilisi', 'Asia/Tehran', 'Asia/Tel_Aviv', 'Asia/Thimbu', 'Asia/Thimphu', 'Asia/Tokyo',&#10;              'Asia/Ujung_Pandang', 'Asia/Ulaanbaatar', 'Asia/Ulan_Bator', 'Asia/Urumqi', 'Asia/Vientiane',&#10;              'Asia/Vladivostok', 'Asia/Yakutsk', 'Asia/Yekaterinburg', 'Asia/Yerevan', 'Atlantic/Azores',&#10;              'Atlantic/Bermuda', 'Atlantic/Canary', 'Atlantic/Cape_Verde', 'Atlantic/Faeroe', 'Atlantic/Faroe',&#10;              'Atlantic/Jan_Mayen', 'Atlantic/Madeira', 'Atlantic/Reykjavik', 'Atlantic/South_Georgia',&#10;              'Atlantic/St_Helena', 'Atlantic/Stanley', 'Australia/ACT', 'Australia/Adelaide', 'Australia/Brisbane',&#10;              'Australia/Broken_Hill', 'Australia/Canberra', 'Australia/Currie', 'Australia/Darwin', 'Australia/Eucla',&#10;              'Australia/Hobart', 'Australia/LHI', 'Australia/Lindeman', 'Australia/Lord_Howe', 'Australia/Melbourne',&#10;              'Australia/NSW', 'Australia/North', 'Australia/Perth', 'Australia/Queensland', 'Australia/South',&#10;              'Australia/Sydney', 'Australia/Tasmania', 'Australia/Victoria', 'Australia/West', 'Australia/Yancowinna',&#10;              'Brazil/Acre', 'Brazil/DeNoronha', 'Brazil/East', 'Brazil/West', 'CET', 'CST6CDT', 'Canada/Atlantic',&#10;              'Canada/Central', 'Canada/East-Saskatchewan', 'Canada/Eastern', 'Canada/Mountain', 'Canada/Newfoundland',&#10;              'Canada/Pacific', 'Canada/Saskatchewan', 'Canada/Yukon', 'Chile/Continental', 'Chile/EasterIsland',&#10;              'Cuba', 'EET', 'EST', 'EST5EDT', 'Egypt', 'Eire', 'Etc/GMT', 'Etc/GMT+0', 'Etc/GMT+1', 'Etc/GMT+10',&#10;              'Etc/GMT+11', 'Etc/GMT+12', 'Etc/GMT+2', 'Etc/GMT+3', 'Etc/GMT+4', 'Etc/GMT+5', 'Etc/GMT+6', 'Etc/GMT+7',&#10;              'Etc/GMT+8', 'Etc/GMT+9', 'Etc/GMT-0', 'Etc/GMT-1', 'Etc/GMT-10', 'Etc/GMT-11', 'Etc/GMT-12',&#10;              'Etc/GMT-13', 'Etc/GMT-14', 'Etc/GMT-2', 'Etc/GMT-3', 'Etc/GMT-4', 'Etc/GMT-5', 'Etc/GMT-6', 'Etc/GMT-7',&#10;              'Etc/GMT-8', 'Etc/GMT-9', 'Etc/GMT0', 'Etc/Greenwich', 'Etc/UCT', 'Etc/UTC', 'Etc/Universal', 'Etc/Zulu',&#10;              'Europe/Amsterdam', 'Europe/Andorra', 'Europe/Athens', 'Europe/Belfast', 'Europe/Belgrade',&#10;              'Europe/Berlin', 'Europe/Bratislava', 'Europe/Brussels', 'Europe/Bucharest', 'Europe/Budapest',&#10;              'Europe/Chisinau', 'Europe/Copenhagen', 'Europe/Dublin', 'Europe/Gibraltar', 'Europe/Guernsey',&#10;              'Europe/Helsinki', 'Europe/Isle_of_Man', 'Europe/Istanbul', 'Europe/Jersey', 'Europe/Kaliningrad',&#10;              'Europe/Kiev', 'Europe/Lisbon', 'Europe/Ljubljana', 'Europe/London', 'Europe/Luxembourg', 'Europe/Madrid',&#10;              'Europe/Malta', 'Europe/Mariehamn', 'Europe/Minsk', 'Europe/Monaco', 'Europe/Moscow', 'Europe/Nicosia',&#10;              'Europe/Oslo', 'Europe/Paris', 'Europe/Podgorica', 'Europe/Prague', 'Europe/Riga', 'Europe/Rome',&#10;              'Europe/Samara', 'Europe/San_Marino', 'Europe/Sarajevo', 'Europe/Simferopol', 'Europe/Skopje',&#10;              'Europe/Sofia', 'Europe/Stockholm', 'Europe/Tallinn', 'Europe/Tirane', 'Europe/Tiraspol',&#10;              'Europe/Uzhgorod', 'Europe/Vaduz', 'Europe/Vatican', 'Europe/Vienna', 'Europe/Vilnius',&#10;              'Europe/Volgograd', 'Europe/Warsaw', 'Europe/Zagreb', 'Europe/Zaporozhye', 'Europe/Zurich', 'GB',&#10;              'GB-Eire', 'GMT', 'GMT+0', 'GMT-0', 'GMT0', 'Greenwich', 'HST', 'Hongkong', 'Iceland',&#10;              'Indian/Antananarivo', 'Indian/Chagos', 'Indian/Christmas', 'Indian/Cocos', 'Indian/Comoro',&#10;              'Indian/Kerguelen', 'Indian/Mahe', 'Indian/Maldives', 'Indian/Mauritius', 'Indian/Mayotte',&#10;              'Indian/Reunion', 'Iran', 'Israel', 'Jamaica', 'Japan', 'Kwajalein', 'Libya', 'MET', 'MST', 'MST7MDT',&#10;              'Mexico/BajaNorte', 'Mexico/BajaSur', 'Mexico/General', 'NZ', 'NZ-CHAT', 'Navajo', 'PRC', 'PST8PDT',&#10;              'Pacific/Apia', 'Pacific/Auckland', 'Pacific/Chatham', 'Pacific/Chuuk', 'Pacific/Easter', 'Pacific/Efate',&#10;              'Pacific/Enderbury', 'Pacific/Fakaofo', 'Pacific/Fiji', 'Pacific/Funafuti', 'Pacific/Galapagos',&#10;              'Pacific/Gambier', 'Pacific/Guadalcanal', 'Pacific/Guam', 'Pacific/Honolulu', 'Pacific/Johnston',&#10;              'Pacific/Kiritimati', 'Pacific/Kosrae', 'Pacific/Kwajalein', 'Pacific/Majuro', 'Pacific/Marquesas',&#10;              'Pacific/Midway', 'Pacific/Nauru', 'Pacific/Niue', 'Pacific/Norfolk', 'Pacific/Noumea',&#10;              'Pacific/Pago_Pago', 'Pacific/Palau', 'Pacific/Pitcairn', 'Pacific/Pohnpei', 'Pacific/Ponape',&#10;              'Pacific/Port_Moresby', 'Pacific/Rarotonga', 'Pacific/Saipan', 'Pacific/Samoa', 'Pacific/Tahiti',&#10;              'Pacific/Tarawa', 'Pacific/Tongatapu', 'Pacific/Truk', 'Pacific/Wake', 'Pacific/Wallis', 'Pacific/Yap',&#10;              'Poland', 'Portugal', 'ROC', 'ROK', 'Singapore', 'Turkey', 'UCT', 'US/Alaska', 'US/Aleutian',&#10;              'US/Arizona', 'US/Central', 'US/East-Indiana', 'US/Eastern', 'US/Hawaii', 'US/Indiana-Starke',&#10;              'US/Michigan', 'US/Mountain', 'US/Pacific', 'US/Pacific-New', 'US/Samoa', 'UTC', 'Universal', 'W-SU',&#10;              'WET', 'Zulu']&#10;&#10;&#10;def test_answer_placeholders():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if placeholder in time_zones:&#10;        passed()&#10;    else:&#10;        failed(&quot;Please, type valid timezone&quot;)&#10;&#10;&#10;if __name__ == '__main__':&#10;    run_common_tests()&#10;    test_answer_placeholders()&#10;" />
                        </map>
                      </option>
                      <option name="updateDate" value="1525784151000" />
                      <option name="taskFiles">
                        <map>
                          <entry key="blog/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/admin.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/admin.py" />
                                <option name="text" value="from django.contrib import admin&#10;&#10;# Register your models here.&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/apps.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/apps.py" />
                                <option name="text" value="from __future__ import unicode_literals&#10;&#10;from django.apps import AppConfig&#10;&#10;&#10;class BlogConfig(AppConfig):&#10;    name = 'blog'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/models.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/models.py" />
                                <option name="text" value="from django.db import models&#10;from django.utils import timezone&#10;&#10;&#10;class Post():&#10;    author = models.ForeignKey('auth.User')&#10;&#10;    text = models.TextField()&#10;    created_date = models.DateTimeField(default=timezone.now)&#10;&#10;&#10;    def publish(self):&#10;        self.published_date = timezone.now()&#10;        self.save()&#10;&#10;    def __str__(self):&#10;        return self.title&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/templates/blog/post_list.html">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/templates/blog/post_list.html" />
                                <option name="text" value="&lt;html&gt;&#10;    &lt;head&gt;&#10;        &lt;title&gt;Name your blog&lt;/title&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;&#10;        &lt;div&gt;&#10;            &lt;h1&gt;&lt;a href=&quot;&quot;&gt;Repeat your blog name&lt;/a&gt;&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        Add your first post here&#10;    &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/urls.py" />
                                <option name="text" value="from django.conf.urls import url&#10;from . import views&#10;&#10;urlpatterns = [&#10;&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/views.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/views.py" />
                                <option name="text" value="from django.shortcuts import render&#10;&#10;from .models import Post&#10;&#10;&#10;def post_list(request):&#10;&#10;    return render(request, '', {})&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="db.sqlite3">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="true" />
                                <option name="name" value="db.sqlite3" />
                                <option name="text" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="manage.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="manage.py" />
                                <option name="text" value="#!/usr/bin/env python&#10;import os&#10;import sys&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;    try:&#10;        from django.core.management import execute_from_command_line&#10;    except ImportError:&#10;        # The above import may fail for some other reason. Ensure that the&#10;        # issue is really that Django is missing to avoid masking other&#10;        # exceptions on Python 2.&#10;        try:&#10;            import django&#10;        except ImportError:&#10;            raise ImportError(&#10;                &quot;Couldn't import Django. Are you sure it's installed and &quot;&#10;                &quot;available on your PYTHONPATH environment variable? Did you &quot;&#10;                &quot;forget to activate a virtual environment?&quot;&#10;            )&#10;        raise&#10;    execute_from_command_line(sys.argv)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/settings.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="For instance, 'Europe/Berlin'" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="2925" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="3" />
                                      <option name="offset" value="2925" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="use correct time zone" />
                                      <option name="possibleAnswer" value="UTC" />
                                      <option name="selected" value="true" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="UTC" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/settings.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;Django settings for mysite project.&#10;&#10;Generated by 'django-admin startproject' using Django 1.10.3.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/topics/settings/&#10;&#10;For the full list of settings and their values, see&#10;https://docs.djangoproject.com/en/1.10/ref/settings/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Build paths inside the project like this: os.path.join(BASE_DIR, ...)&#10;BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))&#10;&#10;&#10;# Quick-start development settings - unsuitable for production&#10;# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/&#10;&#10;# SECURITY WARNING: keep the secret key used in production secret!&#10;SECRET_KEY = '-^c-ih(z2-7ze$jmth7bx+$=r&amp;k@kl=9zm%iuopp7i&amp;l0*#1ah'&#10;&#10;# SECURITY WARNING: don't run with debug turned on in production!&#10;DEBUG = True&#10;&#10;ALLOWED_HOSTS = []&#10;&#10;&#10;# Application definition&#10;&#10;INSTALLED_APPS = [&#10;    'django.contrib.admin',&#10;    'django.contrib.auth',&#10;    'django.contrib.contenttypes',&#10;    'django.contrib.sessions',&#10;    'django.contrib.messages',&#10;    'django.contrib.staticfiles',&#10;    'blog',&#10;]&#10;&#10;MIDDLEWARE = [&#10;    'django.middleware.security.SecurityMiddleware',&#10;    'django.contrib.sessions.middleware.SessionMiddleware',&#10;    'django.middleware.common.CommonMiddleware',&#10;    'django.middleware.csrf.CsrfViewMiddleware',&#10;    'django.contrib.auth.middleware.AuthenticationMiddleware',&#10;    'django.contrib.messages.middleware.MessageMiddleware',&#10;    'django.middleware.clickjacking.XFrameOptionsMiddleware',&#10;]&#10;&#10;ROOT_URLCONF = 'mysite.urls'&#10;&#10;TEMPLATES = [&#10;    {&#10;        'BACKEND': 'django.template.backends.django.DjangoTemplates',&#10;        'DIRS': [],&#10;        'APP_DIRS': True,&#10;        'OPTIONS': {&#10;            'context_processors': [&#10;                'django.template.context_processors.debug',&#10;                'django.template.context_processors.request',&#10;                'django.contrib.auth.context_processors.auth',&#10;                'django.contrib.messages.context_processors.messages',&#10;            ],&#10;        },&#10;    },&#10;]&#10;&#10;WSGI_APPLICATION = 'mysite.wsgi.application'&#10;&#10;&#10;# Database&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#databases&#10;&#10;DATABASES = {&#10;    'default': {&#10;        'ENGINE': 'django.db.backends.sqlite3',&#10;        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),&#10;    }&#10;}&#10;&#10;&#10;# Password validation&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators&#10;&#10;AUTH_PASSWORD_VALIDATORS = [&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',&#10;    },&#10;]&#10;&#10;&#10;# Internationalization&#10;# https://docs.djangoproject.com/en/1.10/topics/i18n/&#10;&#10;LANGUAGE_CODE = 'en-us'&#10;&#10;TIME_ZONE = 'use correct time zone'&#10;&#10;USE_I18N = True&#10;&#10;USE_L10N = True&#10;&#10;USE_TZ = True&#10;&#10;&#10;# Static files (CSS, JavaScript, Images)&#10;# https://docs.djangoproject.com/en/1.10/howto/static-files/&#10;&#10;STATIC_URL = '/static/'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/urls.py" />
                                <option name="text" value="&quot;&quot;&quot;mysite URL Configuration&#10;&#10;The `urlpatterns` list routes URLs to views. For more information please see:&#10;    https://docs.djangoproject.com/en/1.10/topics/http/urls/&#10;Examples:&#10;Function views&#10;    1. Add an import:  from my_app import views&#10;    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')&#10;Class-based views&#10;    1. Add an import:  from other_app.views import Home&#10;    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')&#10;Including another URLconf&#10;    1. Import the include() function: from django.conf.urls import url, include&#10;    2. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))&#10;&quot;&quot;&quot;&#10;from django.conf.urls import url, include&#10;from django.contrib import admin&#10;&#10;urlpatterns = [&#10;    url(r'^admin/', admin.site.urls),&#10;    url(r'', include('blog.urls')),&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/wsgi.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/wsgi.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;WSGI config for mysite project.&#10;&#10;It exposes the WSGI callable as a module-level variable named ``application``.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;from django.core.wsgi import get_wsgi_application&#10;&#10;os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;&#10;application = get_wsgi_application()&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </EduTask>
                    <EduTask>
                      <option name="additionalFiles">
                        <map />
                      </option>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&lt;h3&gt;Models&lt;/h3&gt;&#10;&#10;A model is the single, definitive source of information about your data. It contains the essential fields and behaviors of the data you’re storing. Generally, each model maps to a single database table.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;h4&gt;The basics:&lt;/h4&gt;&#10;&lt;ul&gt;&#10;    &lt;li&gt;Each model is a Python class that subclasses &lt;code&gt;django.db.models.Model&lt;/code&gt;.&lt;/li&gt;&#10;    &lt;li&gt;Each attribute of the model represents a database field.&lt;/li&gt;&#10;    &lt;li&gt;With all of this, Django gives you an automatically-generated database-access API; see &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/db/queries/&quot;&gt;Making queries&lt;/a&gt;.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h4&gt;Quick example&lt;/h4&gt;&#10;This example model defines a Person, which has a &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt;:&#10;&lt;pre&gt;&lt;code&gt;&#10;from django.db import models&#10;&#10;class Person(models.Model):&#10;    first_name = models.CharField(max_length=30)&#10;    last_name = models.CharField(max_length=30)&#10;first_name and last_name are fields of the model. Each field is specified as a class attribute, and each attribute maps to a database column.&#10;&lt;/code&gt;&lt;/pre&gt;&#10;The above Person model would create a database table like this:&#10;&lt;pre&gt;&lt;code&gt;&#10;CREATE TABLE myapp_person (&#10;    &quot;id&quot; serial NOT NULL PRIMARY KEY,&#10;    &quot;first_name&quot; varchar(30) NOT NULL,&#10;    &quot;last_name&quot; varchar(30) NOT NULL&#10;);&#10;&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h4&gt;Task:&lt;/h4&gt;&#10;Make &lt;code&gt;Post&lt;/code&gt; class a django model.&#10;Then define &lt;code&gt;title&lt;/code&gt; as a &lt;code&gt;CharField&lt;/code&gt; with maximum length equals to 200&#10;and &lt;code&gt;published_date&lt;/code&gt; as a &lt;code&gt;DateTimeField&lt;/code&gt;. Allow empty values for &lt;code&gt;published_date&lt;/code&gt;&#10;and make Django store empty values as &lt;code&gt;NULL&lt;/code&gt; in the database&#10;&lt;br/&gt;&lt;br/&gt;&#10;&lt;br/&gt;&lt;br/&gt;&#10;&lt;p style=&quot;color:#808080&quot;&gt;For more information visit &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/db/models/&quot;&gt;django documentation&lt;/a&gt;.&#10;&lt;/html&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="2" />
                      <option name="name" value="task2" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="323996" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="testsText">
                        <map>
                          <entry key="tests.py" value="from test_helper import failed, passed, get_answer_placeholders, test_answer_placeholders_text_deleted, \&#10;    test_is_not_empty&#10;&#10;&#10;def test_answer_placeholders():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if placeholder == &quot;models.Model&quot;:&#10;        passed()&#10;    else:&#10;        failed(&quot;Use models.Model as an ancestor&quot;)&#10;&#10;&#10;def test_title():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[1]&#10;    if &quot;title&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Define title variable&quot;)&#10;&#10;&#10;def test_title1():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[1]&#10;    if &quot;CharField&quot; in placeholder and &quot;max_length&quot; in placeholder and &quot;200&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Create models.CharField(max_length=200) here&quot;)&#10;&#10;&#10;def test_published_date():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[2]&#10;    if &quot;published_date&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Define published_date variable&quot;)&#10;&#10;&#10;def test_published_date1():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[2]&#10;    if &quot;DateTimeField&quot; in placeholder and &quot;blank&quot; in placeholder and &quot;null&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Define variable as DateTimeField(blank=True, null=True)&quot;)&#10;&#10;&#10;if __name__ == '__main__':&#10;    test_is_not_empty()&#10;    test_answer_placeholders_text_deleted()&#10;    test_answer_placeholders()&#10;    test_title()&#10;    test_title1()&#10;    test_published_date()&#10;    test_published_date1()&#10;&#10;&#10;" />
                        </map>
                      </option>
                      <option name="updateDate" value="1525784153000" />
                      <option name="taskFiles">
                        <map>
                          <entry key="blog/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/admin.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/admin.py" />
                                <option name="text" value="from django.contrib import admin&#10;&#10;# Register your models here.&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/apps.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/apps.py" />
                                <option name="text" value="from __future__ import unicode_literals&#10;&#10;from django.apps import AppConfig&#10;&#10;&#10;class BlogConfig(AppConfig):&#10;    name = 'blog'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/models.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="37" />
                                          <option name="offset" value="76" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="37" />
                                      <option name="offset" value="76" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="inherit Post from django models.Model" />
                                      <option name="possibleAnswer" value="models.Model" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="inherit Post from django models.Model" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use max_length parameter" />
                                        </list>
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="57" />
                                          <option name="offset" value="164" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="57" />
                                      <option name="offset" value="164" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="define title as a CharField with max length equals to 200" />
                                      <option name="possibleAnswer" value="title = models.CharField(max_length=200)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define title as a CharField with max length equals to 200" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use blank parameter to allow the field to be blank." />
                                          <option value="Use null parameter to make Django store empty values as NULL in the database" />
                                        </list>
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="318" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="40" />
                                      <option name="offset" value="318" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="define published_date as a DateTimeField" />
                                      <option name="possibleAnswer" value="published_date = models.DateTimeField(blank=True, null=True)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define published_date as a DateTimeField" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/models.py" />
                                <option name="text" value="from django.db import models&#10;from django.utils import timezone&#10;&#10;&#10;class Post(inherit Post from django models.Model):&#10;    author = models.ForeignKey('auth.User')&#10;    define title as a CharField with max length equals to 200&#10;    text = models.TextField()&#10;    created_date = models.DateTimeField(default=timezone.now)&#10;    define published_date as a DateTimeField&#10;&#10;    def publish(self):&#10;        self.published_date = timezone.now()&#10;        self.save()&#10;&#10;    def __str__(self):&#10;        return self.title&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/templates/blog/post_list.html">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/templates/blog/post_list.html" />
                                <option name="text" value="&lt;html&gt;&#10;    &lt;head&gt;&#10;        &lt;title&gt;Name your blog&lt;/title&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;&#10;        &lt;div&gt;&#10;            &lt;h1&gt;&lt;a href=&quot;&quot;&gt;Repeat your blog name&lt;/a&gt;&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        Add your first post here&#10;    &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/urls.py" />
                                <option name="text" value="from django.conf.urls import url&#10;from . import views&#10;&#10;urlpatterns = [&#10;&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/views.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/views.py" />
                                <option name="text" value="from django.shortcuts import render&#10;&#10;from .models import Post&#10;&#10;&#10;def post_list(request):&#10;&#10;    return render(request, '', {})&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="manage.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="manage.py" />
                                <option name="text" value="#!/usr/bin/env python&#10;import os&#10;import sys&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;    try:&#10;        from django.core.management import execute_from_command_line&#10;    except ImportError:&#10;        # The above import may fail for some other reason. Ensure that the&#10;        # issue is really that Django is missing to avoid masking other&#10;        # exceptions on Python 2.&#10;        try:&#10;            import django&#10;        except ImportError:&#10;            raise ImportError(&#10;                &quot;Couldn't import Django. Are you sure it's installed and &quot;&#10;                &quot;available on your PYTHONPATH environment variable? Did you &quot;&#10;                &quot;forget to activate a virtual environment?&quot;&#10;            )&#10;        raise&#10;    execute_from_command_line(sys.argv)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/settings.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="For instance, 'Europe/Berlin'" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="2925" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="2925" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="mysite/settings.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task1" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="use correct time zone" />
                                      <option name="possibleAnswer" value="UTC" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="use correct time zone" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/settings.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;Django settings for mysite project.&#10;&#10;Generated by 'django-admin startproject' using Django 1.10.3.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/topics/settings/&#10;&#10;For the full list of settings and their values, see&#10;https://docs.djangoproject.com/en/1.10/ref/settings/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Build paths inside the project like this: os.path.join(BASE_DIR, ...)&#10;BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))&#10;&#10;&#10;# Quick-start development settings - unsuitable for production&#10;# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/&#10;&#10;# SECURITY WARNING: keep the secret key used in production secret!&#10;SECRET_KEY = '-^c-ih(z2-7ze$jmth7bx+$=r&amp;k@kl=9zm%iuopp7i&amp;l0*#1ah'&#10;&#10;# SECURITY WARNING: don't run with debug turned on in production!&#10;DEBUG = True&#10;&#10;ALLOWED_HOSTS = []&#10;&#10;&#10;# Application definition&#10;&#10;INSTALLED_APPS = [&#10;    'django.contrib.admin',&#10;    'django.contrib.auth',&#10;    'django.contrib.contenttypes',&#10;    'django.contrib.sessions',&#10;    'django.contrib.messages',&#10;    'django.contrib.staticfiles',&#10;    'blog',&#10;]&#10;&#10;MIDDLEWARE = [&#10;    'django.middleware.security.SecurityMiddleware',&#10;    'django.contrib.sessions.middleware.SessionMiddleware',&#10;    'django.middleware.common.CommonMiddleware',&#10;    'django.middleware.csrf.CsrfViewMiddleware',&#10;    'django.contrib.auth.middleware.AuthenticationMiddleware',&#10;    'django.contrib.messages.middleware.MessageMiddleware',&#10;    'django.middleware.clickjacking.XFrameOptionsMiddleware',&#10;]&#10;&#10;ROOT_URLCONF = 'mysite.urls'&#10;&#10;TEMPLATES = [&#10;    {&#10;        'BACKEND': 'django.template.backends.django.DjangoTemplates',&#10;        'DIRS': [],&#10;        'APP_DIRS': True,&#10;        'OPTIONS': {&#10;            'context_processors': [&#10;                'django.template.context_processors.debug',&#10;                'django.template.context_processors.request',&#10;                'django.contrib.auth.context_processors.auth',&#10;                'django.contrib.messages.context_processors.messages',&#10;            ],&#10;        },&#10;    },&#10;]&#10;&#10;WSGI_APPLICATION = 'mysite.wsgi.application'&#10;&#10;&#10;# Database&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#databases&#10;&#10;DATABASES = {&#10;    'default': {&#10;        'ENGINE': 'django.db.backends.sqlite3',&#10;        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),&#10;    }&#10;}&#10;&#10;&#10;# Password validation&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators&#10;&#10;AUTH_PASSWORD_VALIDATORS = [&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',&#10;    },&#10;]&#10;&#10;&#10;# Internationalization&#10;# https://docs.djangoproject.com/en/1.10/topics/i18n/&#10;&#10;LANGUAGE_CODE = 'en-us'&#10;&#10;TIME_ZONE = 'use correct time zone'&#10;&#10;USE_I18N = True&#10;&#10;USE_L10N = True&#10;&#10;USE_TZ = True&#10;&#10;&#10;# Static files (CSS, JavaScript, Images)&#10;# https://docs.djangoproject.com/en/1.10/howto/static-files/&#10;&#10;STATIC_URL = '/static/'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/urls.py" />
                                <option name="text" value="&quot;&quot;&quot;mysite URL Configuration&#10;&#10;The `urlpatterns` list routes URLs to views. For more information please see:&#10;    https://docs.djangoproject.com/en/1.10/topics/http/urls/&#10;Examples:&#10;Function views&#10;    1. Add an import:  from my_app import views&#10;    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')&#10;Class-based views&#10;    1. Add an import:  from other_app.views import Home&#10;    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')&#10;Including another URLconf&#10;    1. Import the include() function: from django.conf.urls import url, include&#10;    2. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))&#10;&quot;&quot;&quot;&#10;from django.conf.urls import url, include&#10;from django.contrib import admin&#10;&#10;urlpatterns = [&#10;    url(r'^admin/', admin.site.urls),&#10;    url(r'', include('blog.urls')),&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/wsgi.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/wsgi.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;WSGI config for mysite project.&#10;&#10;It exposes the WSGI callable as a module-level variable named ``application``.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;from django.core.wsgi import get_wsgi_application&#10;&#10;os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;&#10;application = get_wsgi_application()&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </EduTask>
                    <EduTask>
                      <option name="additionalFiles">
                        <map />
                      </option>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&lt;h3&gt;URL dispatcher&lt;/h3&gt;&#10;A URL is simply a web address. You can see a URL every time you visit a website – it is visible in your browser's address bar.&#10;&#10;&lt;br&gt;&lt;br&gt;&#10;&#10;A clean, elegant URL scheme is an important detail in a high-quality Web application. Django lets you design URLs however you want, with no framework limitations.&#10;&lt;br&gt;&lt;br&gt;&#10;To design URLs for an app, you create a Python module informally called a URLconf (URL configuration). This module is pure Python code and is a simple mapping between URL patterns (simple regular expressions) to Python functions (your views).&#10;&lt;br&gt;&lt;br&gt;&#10;This mapping can be as short or as long as needed. It can reference other mappings. And, because it’s pure Python code, it can be constructed dynamically.&#10;&lt;br&gt;&lt;br&gt;&#10;&#10;&lt;h4&gt;Example:&lt;/h4&gt;&#10;&lt;pre&gt;&lt;code&gt;from django.conf.urls import url&#10;&#10;from . import views&#10;&#10;urlpatterns = [&#10;    url(r'^articles/2003/$', views.special_case_2003),&#10;    url(r'^articles/([0-9]{4})/$', views.year_archive),&#10;    url(r'^articles/([0-9]{4})/([0-9]{2})/$', views.month_archive),&#10;    url(r'^articles/([0-9]{4})/([0-9]{2})/([0-9]+)/$', views.article_detail),&#10;]&lt;/code&gt;&lt;/pre&gt;&#10;&lt;h4&gt;Notes:&lt;/h4&gt;&#10;&lt;ul&gt;&#10;    &lt;li&gt;To capture a value from the URL, just put parenthesis around it.&lt;/li&gt;&#10;    &lt;li&gt;There’s no need to add a leading slash, because every URL has that. For example, it’s ^articles, not ^/articles.&lt;/li&gt;&#10;    &lt;li&gt;The 'r' in front of each regular expression string is optional but recommended. It tells Python that a string is “raw” – that nothing in the string should be escaped. &lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;h4&gt;Task:&lt;/h4&gt;&#10;Map URL pattern for empty (and only empty) string to &lt;code&gt;view.post_list&lt;/code&gt; using builtin django &lt;code&gt;url&lt;/code&gt; function.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;p style=&quot;color:#808080&quot;&gt;For more information visit &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/http/urls/&quot;&gt;django documentation&lt;/a&gt;.&#10;&lt;/html&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="3" />
                      <option name="name" value="task3" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="323997" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="testsText">
                        <map>
                          <entry key="tests.py" value="from test_helper import failed, passed, get_answer_placeholders, \&#10;    test_is_not_empty, test_answer_placeholders_text_deleted&#10;&#10;&#10;def test_answer_placeholders():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if &quot;^$&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Use '^$' to match empty string&quot;)&#10;&#10;&#10;def test_answer_placeholders1():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if &quot;views.post_list&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Map url to the views.post_list&quot;)&#10;&#10;&#10;if __name__ == '__main__':&#10;    test_is_not_empty()&#10;    test_answer_placeholders_text_deleted()&#10;    test_answer_placeholders()&#10;    test_answer_placeholders1()&#10;&#10;&#10;" />
                        </map>
                      </option>
                      <option name="updateDate" value="1525784154000" />
                      <option name="taskFiles">
                        <map>
                          <entry key="blog/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/admin.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/admin.py" />
                                <option name="text" value="from django.contrib import admin&#10;&#10;# Register your models here.&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/apps.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/apps.py" />
                                <option name="text" value="from __future__ import unicode_literals&#10;&#10;from django.apps import AppConfig&#10;&#10;&#10;class BlogConfig(AppConfig):&#10;    name = 'blog'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/models.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="37" />
                                          <option name="offset" value="76" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="37" />
                                      <option name="offset" value="76" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="inherit Post from django models.Model" />
                                      <option name="possibleAnswer" value="models.Model" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="inherit Post from django models.Model" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use max_length parameter" />
                                        </list>
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="57" />
                                          <option name="offset" value="164" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="57" />
                                      <option name="offset" value="164" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="1" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define title as a CharField with max length equals to 200" />
                                      <option name="possibleAnswer" value="title = models.CharField(max_length=200)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define title as a CharField with max length equals to 200" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use blank parameter to allow the field to be blank." />
                                          <option value="Use null parameter to make Django store empty values as NULL in the database" />
                                        </list>
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="318" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="40" />
                                      <option name="offset" value="318" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="2" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define published_date as a DateTimeField" />
                                      <option name="possibleAnswer" value="published_date = models.DateTimeField(blank=True, null=True)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define published_date as a DateTimeField" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/models.py" />
                                <option name="text" value="from django.db import models&#10;from django.utils import timezone&#10;&#10;&#10;class Post(inherit Post from django models.Model):&#10;    author = models.ForeignKey('auth.User')&#10;    define title as a CharField with max length equals to 200&#10;    text = models.TextField()&#10;    created_date = models.DateTimeField(default=timezone.now)&#10;    define published_date as a DateTimeField&#10;&#10;    def publish(self):&#10;        self.published_date = timezone.now()&#10;        self.save()&#10;&#10;    def __str__(self):&#10;        return self.title&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/templates/blog/post_list.html">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/templates/blog/post_list.html" />
                                <option name="text" value="&lt;html&gt;&#10;    &lt;head&gt;&#10;        &lt;title&gt;Name your blog&lt;/title&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;&#10;        &lt;div&gt;&#10;            &lt;h1&gt;&lt;a href=&quot;&quot;&gt;Repeat your blog name&lt;/a&gt;&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        Add your first post here&#10;    &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use '^$' to match empty string" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="52" />
                                          <option name="offset" value="74" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="52" />
                                      <option name="offset" value="74" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="Map pattern for empty string to post_list from views" />
                                      <option name="possibleAnswer" value="url(r'^$', views.post_list, name='post_list')," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Map pattern for empty string to post_list from views" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/urls.py" />
                                <option name="text" value="from django.conf.urls import url&#10;from . import views&#10;&#10;urlpatterns = [&#10;    Map pattern for empty string to post_list from views&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/views.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/views.py" />
                                <option name="text" value="from django.shortcuts import render&#10;&#10;from .models import Post&#10;&#10;&#10;def post_list(request):&#10;&#10;    return render(request, '', {})&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="manage.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="manage.py" />
                                <option name="text" value="#!/usr/bin/env python&#10;import os&#10;import sys&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;    try:&#10;        from django.core.management import execute_from_command_line&#10;    except ImportError:&#10;        # The above import may fail for some other reason. Ensure that the&#10;        # issue is really that Django is missing to avoid masking other&#10;        # exceptions on Python 2.&#10;        try:&#10;            import django&#10;        except ImportError:&#10;            raise ImportError(&#10;                &quot;Couldn't import Django. Are you sure it's installed and &quot;&#10;                &quot;available on your PYTHONPATH environment variable? Did you &quot;&#10;                &quot;forget to activate a virtual environment?&quot;&#10;            )&#10;        raise&#10;    execute_from_command_line(sys.argv)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/settings.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="For instance, 'Europe/Berlin'" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="2925" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="2925" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="mysite/settings.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task1" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="use correct time zone" />
                                      <option name="possibleAnswer" value="UTC" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="use correct time zone" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/settings.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;Django settings for mysite project.&#10;&#10;Generated by 'django-admin startproject' using Django 1.10.3.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/topics/settings/&#10;&#10;For the full list of settings and their values, see&#10;https://docs.djangoproject.com/en/1.10/ref/settings/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Build paths inside the project like this: os.path.join(BASE_DIR, ...)&#10;BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))&#10;&#10;&#10;# Quick-start development settings - unsuitable for production&#10;# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/&#10;&#10;# SECURITY WARNING: keep the secret key used in production secret!&#10;SECRET_KEY = '-^c-ih(z2-7ze$jmth7bx+$=r&amp;k@kl=9zm%iuopp7i&amp;l0*#1ah'&#10;&#10;# SECURITY WARNING: don't run with debug turned on in production!&#10;DEBUG = True&#10;&#10;ALLOWED_HOSTS = []&#10;&#10;&#10;# Application definition&#10;&#10;INSTALLED_APPS = [&#10;    'django.contrib.admin',&#10;    'django.contrib.auth',&#10;    'django.contrib.contenttypes',&#10;    'django.contrib.sessions',&#10;    'django.contrib.messages',&#10;    'django.contrib.staticfiles',&#10;    'blog',&#10;]&#10;&#10;MIDDLEWARE = [&#10;    'django.middleware.security.SecurityMiddleware',&#10;    'django.contrib.sessions.middleware.SessionMiddleware',&#10;    'django.middleware.common.CommonMiddleware',&#10;    'django.middleware.csrf.CsrfViewMiddleware',&#10;    'django.contrib.auth.middleware.AuthenticationMiddleware',&#10;    'django.contrib.messages.middleware.MessageMiddleware',&#10;    'django.middleware.clickjacking.XFrameOptionsMiddleware',&#10;]&#10;&#10;ROOT_URLCONF = 'mysite.urls'&#10;&#10;TEMPLATES = [&#10;    {&#10;        'BACKEND': 'django.template.backends.django.DjangoTemplates',&#10;        'DIRS': [],&#10;        'APP_DIRS': True,&#10;        'OPTIONS': {&#10;            'context_processors': [&#10;                'django.template.context_processors.debug',&#10;                'django.template.context_processors.request',&#10;                'django.contrib.auth.context_processors.auth',&#10;                'django.contrib.messages.context_processors.messages',&#10;            ],&#10;        },&#10;    },&#10;]&#10;&#10;WSGI_APPLICATION = 'mysite.wsgi.application'&#10;&#10;&#10;# Database&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#databases&#10;&#10;DATABASES = {&#10;    'default': {&#10;        'ENGINE': 'django.db.backends.sqlite3',&#10;        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),&#10;    }&#10;}&#10;&#10;&#10;# Password validation&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators&#10;&#10;AUTH_PASSWORD_VALIDATORS = [&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',&#10;    },&#10;]&#10;&#10;&#10;# Internationalization&#10;# https://docs.djangoproject.com/en/1.10/topics/i18n/&#10;&#10;LANGUAGE_CODE = 'en-us'&#10;&#10;TIME_ZONE = 'use correct time zone'&#10;&#10;USE_I18N = True&#10;&#10;USE_L10N = True&#10;&#10;USE_TZ = True&#10;&#10;&#10;# Static files (CSS, JavaScript, Images)&#10;# https://docs.djangoproject.com/en/1.10/howto/static-files/&#10;&#10;STATIC_URL = '/static/'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/wsgi.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/wsgi.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;WSGI config for mysite project.&#10;&#10;It exposes the WSGI callable as a module-level variable named ``application``.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;from django.core.wsgi import get_wsgi_application&#10;&#10;os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;&#10;application = get_wsgi_application()&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </EduTask>
                    <EduTask>
                      <option name="additionalFiles">
                        <map />
                      </option>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&lt;h3&gt;Writing views&lt;/h3&gt;&#10;A view function, or view for short, is simply a Python function that takes a Web request and returns a Web response. This response can be the HTML contents of a Web page, or a redirect, or a 404 error, or an XML document, or an image . . . or anything, really. The view itself contains whatever arbitrary logic is necessary to return that response. This code can live anywhere you want, as long as it’s on your Python path. There’s no other requirement–no “magic,” so to speak. For the sake of putting the code somewhere, the convention is to put views in a file called views.py, placed in your project or application directory.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;h4&gt;Example&lt;/h4&gt;&#10;Here’s a view that returns the current date and time, as an HTML document:&#10;&lt;pre&gt;&lt;code&gt;from django.http import HttpResponse&#10;import datetime&#10;&#10;def current_datetime(request):&#10;    now = datetime.datetime.now()&#10;    html = &quot;It is now %s.&quot; % now&#10;    return HttpResponse(html)&lt;/code&gt;&lt;/pre&gt;&#10;&#10;Here we define a function called &lt;code&gt;current_datetime&lt;/code&gt;.&#10;This is the view function. Each view function takes an &lt;code&gt;HttpRequest&lt;/code&gt; object as its first parameter, which is typically named &lt;code&gt;request&lt;/code&gt;.&#10;&lt;br&gt;&lt;br&gt;&#10;Note that the name of the view function doesn’t matter; it doesn’t have to be named in a certain way in order for Django to recognize it.&#10;&lt;br&gt;&#10;We’re calling it &lt;code&gt;current_datetime&lt;/code&gt; here,&#10;because that name clearly indicates what it does.&#10;&lt;br&gt;&lt;br&gt;&#10;The view returns an &lt;code&gt;HttpResponse&lt;/code&gt; object that contains&#10;the generated response. Each view function is responsible for returning an&#10;&lt;code&gt;HttpResponse&lt;/code&gt; object.&#10;&#10;&lt;h4&gt;Task:&lt;/h4&gt;&#10;Render 'blog/post_list.html' template.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;p style=&quot;color:#808080&quot;&gt;For more information visit &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/http/views/&quot;&gt;django documentation&lt;/a&gt;.&#10;&#10;&lt;br&gt;&#10;&lt;/html&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="4" />
                      <option name="name" value="task4" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="323998" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="testsText">
                        <map>
                          <entry key="tests.py" value="from test_helper import failed, passed, get_answer_placeholders, test_answer_placeholders_text_deleted, \&#10;    test_is_not_empty&#10;&#10;&#10;def test_answer_placeholders():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if &quot;blog&quot; in placeholder and &quot;post_list.html&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Please, render blog/post_list.html template&quot;)&#10;&#10;&#10;if __name__ == '__main__':&#10;    test_is_not_empty()&#10;    test_answer_placeholders_text_deleted()&#10;    test_answer_placeholders()&#10;&#10;&#10;" />
                        </map>
                      </option>
                      <option name="updateDate" value="1525784155000" />
                      <option name="taskFiles">
                        <map>
                          <entry key="blog/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/admin.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/admin.py" />
                                <option name="text" value="from django.contrib import admin&#10;&#10;# Register your models here.&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/apps.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/apps.py" />
                                <option name="text" value="from __future__ import unicode_literals&#10;&#10;from django.apps import AppConfig&#10;&#10;&#10;class BlogConfig(AppConfig):&#10;    name = 'blog'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/models.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="37" />
                                          <option name="offset" value="76" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="37" />
                                      <option name="offset" value="76" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="inherit Post from django models.Model" />
                                      <option name="possibleAnswer" value="models.Model" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="inherit Post from django models.Model" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use max_length parameter" />
                                        </list>
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="57" />
                                          <option name="offset" value="164" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="57" />
                                      <option name="offset" value="164" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="1" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define title as a CharField with max length equals to 200" />
                                      <option name="possibleAnswer" value="title = models.CharField(max_length=200)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define title as a CharField with max length equals to 200" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use blank parameter to allow the field to be blank." />
                                          <option value="Use null parameter to make Django store empty values as NULL in the database" />
                                        </list>
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="318" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="40" />
                                      <option name="offset" value="318" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="2" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define published_date as a DateTimeField" />
                                      <option name="possibleAnswer" value="published_date = models.DateTimeField(blank=True, null=True)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define published_date as a DateTimeField" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/models.py" />
                                <option name="text" value="from django.db import models&#10;from django.utils import timezone&#10;&#10;&#10;class Post(inherit Post from django models.Model):&#10;    author = models.ForeignKey('auth.User')&#10;    define title as a CharField with max length equals to 200&#10;    text = models.TextField()&#10;    created_date = models.DateTimeField(default=timezone.now)&#10;    define published_date as a DateTimeField&#10;&#10;    def publish(self):&#10;        self.published_date = timezone.now()&#10;        self.save()&#10;&#10;    def __str__(self):&#10;        return self.title&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/templates/blog/post_list.html">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/templates/blog/post_list.html" />
                                <option name="text" value="&lt;html&gt;&#10;    &lt;head&gt;&#10;        &lt;title&gt;Name your blog&lt;/title&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;&#10;        &lt;div&gt;&#10;            &lt;h1&gt;&lt;a href=&quot;&quot;&gt;Repeat your blog name&lt;/a&gt;&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        Add your first post here&#10;    &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use '^$' to match empty string" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="52" />
                                          <option name="offset" value="74" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="52" />
                                      <option name="offset" value="74" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/urls.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task3" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Map pattern for empty string to post_list from views" />
                                      <option name="possibleAnswer" value="url(r'^$', views.post_list, name='post_list')," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Map pattern for empty string to post_list from views" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/urls.py" />
                                <option name="text" value="from django.conf.urls import url&#10;from . import views&#10;&#10;urlpatterns = [&#10;    Map pattern for empty string to post_list from views&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/views.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="43" />
                                          <option name="offset" value="117" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="43" />
                                      <option name="offset" value="117" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="pass blog/post_list.html template file here" />
                                      <option name="possibleAnswer" value="blog/post_list.html" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="pass blog/post_list.html template file here" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/views.py" />
                                <option name="text" value="from django.shortcuts import render&#10;&#10;from .models import Post&#10;&#10;&#10;def post_list(request):&#10;&#10;    return render(request, 'pass blog/post_list.html template file here', {})&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="manage.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="manage.py" />
                                <option name="text" value="#!/usr/bin/env python&#10;import os&#10;import sys&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;    try:&#10;        from django.core.management import execute_from_command_line&#10;    except ImportError:&#10;        # The above import may fail for some other reason. Ensure that the&#10;        # issue is really that Django is missing to avoid masking other&#10;        # exceptions on Python 2.&#10;        try:&#10;            import django&#10;        except ImportError:&#10;            raise ImportError(&#10;                &quot;Couldn't import Django. Are you sure it's installed and &quot;&#10;                &quot;available on your PYTHONPATH environment variable? Did you &quot;&#10;                &quot;forget to activate a virtual environment?&quot;&#10;            )&#10;        raise&#10;    execute_from_command_line(sys.argv)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/settings.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="For instance, 'Europe/Berlin'" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="2925" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="2925" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="mysite/settings.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task3" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="use correct time zone" />
                                      <option name="possibleAnswer" value="UTC" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="use correct time zone" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/settings.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;Django settings for mysite project.&#10;&#10;Generated by 'django-admin startproject' using Django 1.10.3.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/topics/settings/&#10;&#10;For the full list of settings and their values, see&#10;https://docs.djangoproject.com/en/1.10/ref/settings/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Build paths inside the project like this: os.path.join(BASE_DIR, ...)&#10;BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))&#10;&#10;&#10;# Quick-start development settings - unsuitable for production&#10;# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/&#10;&#10;# SECURITY WARNING: keep the secret key used in production secret!&#10;SECRET_KEY = '-^c-ih(z2-7ze$jmth7bx+$=r&amp;k@kl=9zm%iuopp7i&amp;l0*#1ah'&#10;&#10;# SECURITY WARNING: don't run with debug turned on in production!&#10;DEBUG = True&#10;&#10;ALLOWED_HOSTS = []&#10;&#10;&#10;# Application definition&#10;&#10;INSTALLED_APPS = [&#10;    'django.contrib.admin',&#10;    'django.contrib.auth',&#10;    'django.contrib.contenttypes',&#10;    'django.contrib.sessions',&#10;    'django.contrib.messages',&#10;    'django.contrib.staticfiles',&#10;    'blog',&#10;]&#10;&#10;MIDDLEWARE = [&#10;    'django.middleware.security.SecurityMiddleware',&#10;    'django.contrib.sessions.middleware.SessionMiddleware',&#10;    'django.middleware.common.CommonMiddleware',&#10;    'django.middleware.csrf.CsrfViewMiddleware',&#10;    'django.contrib.auth.middleware.AuthenticationMiddleware',&#10;    'django.contrib.messages.middleware.MessageMiddleware',&#10;    'django.middleware.clickjacking.XFrameOptionsMiddleware',&#10;]&#10;&#10;ROOT_URLCONF = 'mysite.urls'&#10;&#10;TEMPLATES = [&#10;    {&#10;        'BACKEND': 'django.template.backends.django.DjangoTemplates',&#10;        'DIRS': [],&#10;        'APP_DIRS': True,&#10;        'OPTIONS': {&#10;            'context_processors': [&#10;                'django.template.context_processors.debug',&#10;                'django.template.context_processors.request',&#10;                'django.contrib.auth.context_processors.auth',&#10;                'django.contrib.messages.context_processors.messages',&#10;            ],&#10;        },&#10;    },&#10;]&#10;&#10;WSGI_APPLICATION = 'mysite.wsgi.application'&#10;&#10;&#10;# Database&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#databases&#10;&#10;DATABASES = {&#10;    'default': {&#10;        'ENGINE': 'django.db.backends.sqlite3',&#10;        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),&#10;    }&#10;}&#10;&#10;&#10;# Password validation&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators&#10;&#10;AUTH_PASSWORD_VALIDATORS = [&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',&#10;    },&#10;]&#10;&#10;&#10;# Internationalization&#10;# https://docs.djangoproject.com/en/1.10/topics/i18n/&#10;&#10;LANGUAGE_CODE = 'en-us'&#10;&#10;TIME_ZONE = 'use correct time zone'&#10;&#10;USE_I18N = True&#10;&#10;USE_L10N = True&#10;&#10;USE_TZ = True&#10;&#10;&#10;# Static files (CSS, JavaScript, Images)&#10;# https://docs.djangoproject.com/en/1.10/howto/static-files/&#10;&#10;STATIC_URL = '/static/'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/wsgi.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/wsgi.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;WSGI config for mysite project.&#10;&#10;It exposes the WSGI callable as a module-level variable named ``application``.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;from django.core.wsgi import get_wsgi_application&#10;&#10;os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;&#10;application = get_wsgi_application()&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </EduTask>
                    <EduTask>
                      <option name="additionalFiles">
                        <map />
                      </option>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&lt;h3&gt;Templates&lt;/h3&gt;&#10;A template is a file that we can re-use to present different information in a consistent format – for example, you could use a template to help you write a letter,&#10;because although each letter might contain a different message and be addressed to a different person, they will share the same format.&#10;&lt;br&gt;&lt;br&gt;&#10;A Django template's format is described in a language called HTML.&#10;&#10;&#10;&lt;h4&gt;Task:&lt;/h4&gt;&#10;Give your blog a name.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;p style=&quot;color:#808080&quot;&gt;For more information visit &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/templates/&quot;&gt;django documentation&lt;/a&gt;.&#10;&#10;&lt;br&gt;&#10;&lt;/html&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="5" />
                      <option name="name" value="task5" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="323999" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="testsText">
                        <map>
                          <entry key="tests.py" value="from test_helper import run_common_tests&#10;&#10;if __name__ == '__main__':&#10;    run_common_tests()&#10;&#10;&#10;" />
                        </map>
                      </option>
                      <option name="updateDate" value="1525784157000" />
                      <option name="taskFiles">
                        <map>
                          <entry key="blog/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/admin.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/admin.py" />
                                <option name="text" value="from django.contrib import admin&#10;&#10;# Register your models here.&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/apps.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/apps.py" />
                                <option name="text" value="from __future__ import unicode_literals&#10;&#10;from django.apps import AppConfig&#10;&#10;&#10;class BlogConfig(AppConfig):&#10;    name = 'blog'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/models.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="37" />
                                          <option name="offset" value="76" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="37" />
                                      <option name="offset" value="76" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="inherit Post from django models.Model" />
                                      <option name="possibleAnswer" value="models.Model" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="inherit Post from django models.Model" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use max_length parameter" />
                                        </list>
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="57" />
                                          <option name="offset" value="164" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="57" />
                                      <option name="offset" value="164" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="1" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define title as a CharField with max length equals to 200" />
                                      <option name="possibleAnswer" value="title = models.CharField(max_length=200)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define title as a CharField with max length equals to 200" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use blank parameter to allow the field to be blank." />
                                          <option value="Use null parameter to make Django store empty values as NULL in the database" />
                                        </list>
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="318" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="40" />
                                      <option name="offset" value="318" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="2" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define published_date as a DateTimeField" />
                                      <option name="possibleAnswer" value="published_date = models.DateTimeField(blank=True, null=True)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define published_date as a DateTimeField" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/models.py" />
                                <option name="text" value="from django.db import models&#10;from django.utils import timezone&#10;&#10;&#10;class Post(inherit Post from django models.Model):&#10;    author = models.ForeignKey('auth.User')&#10;    define title as a CharField with max length equals to 200&#10;    text = models.TextField()&#10;    created_date = models.DateTimeField(default=timezone.now)&#10;    define published_date as a DateTimeField&#10;&#10;    def publish(self):&#10;        self.published_date = timezone.now()&#10;        self.save()&#10;&#10;    def __str__(self):&#10;        return self.title&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/templates/blog/post_list.html">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="This text will appear in the title bar of your browser" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="14" />
                                          <option name="offset" value="33" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="14" />
                                      <option name="offset" value="33" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="Name your blog" />
                                      <option name="possibleAnswer" value="Django Girls blog" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Name your blog" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Repeat the name of your blog." />
                                        </list>
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="121" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="121" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="Repeat your blog name" />
                                      <option name="possibleAnswer" value="Django Girls blog" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Repeat your blog name" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Write your first post." />
                                        </list>
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="24" />
                                          <option name="offset" value="176" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="24" />
                                      <option name="offset" value="176" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="Add your first post here" />
                                      <option name="possibleAnswer" value="&lt;div&gt;&#10;            &lt;p&gt;published: 14.06.2014, 12:14&lt;/p&gt;&#10;            &lt;h2&gt;&lt;a href=&quot;&quot;&gt;My first post&lt;/a&gt;&lt;/h2&gt;&#10;            &lt;p&gt;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;&#10;        &lt;/div&gt;" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Add your first post here" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/templates/blog/post_list.html" />
                                <option name="text" value="&lt;html&gt;&#10;    &lt;head&gt;&#10;        &lt;title&gt;Name your blog&lt;/title&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;U&#10;        &lt;div&gt;&#10;            &lt;h1&gt;&lt;a href=&quot;&quot;&gt;Repeat your blog name&lt;/a&gt;&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        Add your first post here&#10;    &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use '^$' to match empty string" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="52" />
                                          <option name="offset" value="74" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="52" />
                                      <option name="offset" value="74" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/urls.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task3" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Map pattern for empty string to post_list from views" />
                                      <option name="possibleAnswer" value="url(r'^$', views.post_list, name='post_list')," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Map pattern for empty string to post_list from views" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/urls.py" />
                                <option name="text" value="from django.conf.urls import url&#10;from . import views&#10;&#10;urlpatterns = [&#10;    Map pattern for empty string to post_list from views&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/views.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="43" />
                                          <option name="offset" value="117" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="43" />
                                      <option name="offset" value="117" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/views.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task4" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="pass blog/post_list.html template file here" />
                                      <option name="possibleAnswer" value="blog/post_list.html" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="pass blog/post_list.html template file here" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/views.py" />
                                <option name="text" value="from django.shortcuts import render&#10;&#10;from .models import Post&#10;&#10;&#10;def post_list(request):&#10;&#10;    return render(request, 'pass blog/post_list.html template file here', {})&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="manage.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="manage.py" />
                                <option name="text" value="#!/usr/bin/env python&#10;import os&#10;import sys&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;    try:&#10;        from django.core.management import execute_from_command_line&#10;    except ImportError:&#10;        # The above import may fail for some other reason. Ensure that the&#10;        # issue is really that Django is missing to avoid masking other&#10;        # exceptions on Python 2.&#10;        try:&#10;            import django&#10;        except ImportError:&#10;            raise ImportError(&#10;                &quot;Couldn't import Django. Are you sure it's installed and &quot;&#10;                &quot;available on your PYTHONPATH environment variable? Did you &quot;&#10;                &quot;forget to activate a virtual environment?&quot;&#10;            )&#10;        raise&#10;    execute_from_command_line(sys.argv)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/settings.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="For instance, 'Europe/Berlin'" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="2925" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="2925" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="mysite/settings.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task3" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="use correct time zone" />
                                      <option name="possibleAnswer" value="UTC" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="use correct time zone" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/settings.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;Django settings for mysite project.&#10;&#10;Generated by 'django-admin startproject' using Django 1.10.3.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/topics/settings/&#10;&#10;For the full list of settings and their values, see&#10;https://docs.djangoproject.com/en/1.10/ref/settings/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Build paths inside the project like this: os.path.join(BASE_DIR, ...)&#10;BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))&#10;&#10;&#10;# Quick-start development settings - unsuitable for production&#10;# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/&#10;&#10;# SECURITY WARNING: keep the secret key used in production secret!&#10;SECRET_KEY = '-^c-ih(z2-7ze$jmth7bx+$=r&amp;k@kl=9zm%iuopp7i&amp;l0*#1ah'&#10;&#10;# SECURITY WARNING: don't run with debug turned on in production!&#10;DEBUG = True&#10;&#10;ALLOWED_HOSTS = []&#10;&#10;&#10;# Application definition&#10;&#10;INSTALLED_APPS = [&#10;    'django.contrib.admin',&#10;    'django.contrib.auth',&#10;    'django.contrib.contenttypes',&#10;    'django.contrib.sessions',&#10;    'django.contrib.messages',&#10;    'django.contrib.staticfiles',&#10;    'blog',&#10;]&#10;&#10;MIDDLEWARE = [&#10;    'django.middleware.security.SecurityMiddleware',&#10;    'django.contrib.sessions.middleware.SessionMiddleware',&#10;    'django.middleware.common.CommonMiddleware',&#10;    'django.middleware.csrf.CsrfViewMiddleware',&#10;    'django.contrib.auth.middleware.AuthenticationMiddleware',&#10;    'django.contrib.messages.middleware.MessageMiddleware',&#10;    'django.middleware.clickjacking.XFrameOptionsMiddleware',&#10;]&#10;&#10;ROOT_URLCONF = 'mysite.urls'&#10;&#10;TEMPLATES = [&#10;    {&#10;        'BACKEND': 'django.template.backends.django.DjangoTemplates',&#10;        'DIRS': [],&#10;        'APP_DIRS': True,&#10;        'OPTIONS': {&#10;            'context_processors': [&#10;                'django.template.context_processors.debug',&#10;                'django.template.context_processors.request',&#10;                'django.contrib.auth.context_processors.auth',&#10;                'django.contrib.messages.context_processors.messages',&#10;            ],&#10;        },&#10;    },&#10;]&#10;&#10;WSGI_APPLICATION = 'mysite.wsgi.application'&#10;&#10;&#10;# Database&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#databases&#10;&#10;DATABASES = {&#10;    'default': {&#10;        'ENGINE': 'django.db.backends.sqlite3',&#10;        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),&#10;    }&#10;}&#10;&#10;&#10;# Password validation&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators&#10;&#10;AUTH_PASSWORD_VALIDATORS = [&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',&#10;    },&#10;]&#10;&#10;&#10;# Internationalization&#10;# https://docs.djangoproject.com/en/1.10/topics/i18n/&#10;&#10;LANGUAGE_CODE = 'en-us'&#10;&#10;TIME_ZONE = 'use correct time zone'&#10;&#10;USE_I18N = True&#10;&#10;USE_L10N = True&#10;&#10;USE_TZ = True&#10;&#10;&#10;# Static files (CSS, JavaScript, Images)&#10;# https://docs.djangoproject.com/en/1.10/howto/static-files/&#10;&#10;STATIC_URL = '/static/'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/wsgi.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/wsgi.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;WSGI config for mysite project.&#10;&#10;It exposes the WSGI callable as a module-level variable named ``application``.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;from django.core.wsgi import get_wsgi_application&#10;&#10;os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;&#10;application = get_wsgi_application()&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </EduTask>
                    <EduTask>
                      <option name="additionalFiles">
                        <map />
                      </option>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&lt;h3&gt;Dynamic data in templates&lt;/h3&gt;&#10;&#10;&lt;h4&gt;Django ORM and QuerySets&lt;/h4&gt;&#10;A QuerySet is, in essence, a list of objects of a given Model. QuerySets allow you to read the data from the database, filter it and order it.&#10;&lt;h4&gt;Example&lt;/h4&gt;&#10;&lt;pre&gt;&lt;code&gt;Post.objects.all()&lt;/code&gt;&lt;/pre&gt;&#10;&#10;This code will give you the list of the posts we created earlier.&#10;&#10;&lt;h4&gt;Filter objects&lt;/h4&gt;&#10;A big part of QuerySets is the ability to filter them.&#10;Let's say we want to find all posts that user ola authored.&#10;We will use filter instead of all in &lt;code&gt;Post.objects.all()&lt;/code&gt;.&#10;In parentheses we state what condition(s) a blog post&#10;needs to meet to end up in our queryset.&#10;In our case, the condition is that author should be&#10;equal to me. The way to write it in Django is &lt;code&gt;author=me&lt;/code&gt;.&#10;Now our piece of code looks like this:&#10;&lt;pre&gt;&lt;code&gt; Post.objects.filter(author=me)&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h4&gt;Ordering objects&lt;/h4&gt;&#10;&#10;QuerySets also allow you to order the list of objects.&#10;Let's try to order posts by &lt;code&gt;created_date&lt;/code&gt; field:&#10;&#10;&lt;pre&gt;&lt;code&gt;Post.objects.order_by('created_date')&lt;/code&gt;&lt;/pre&gt;&#10;We can also reverse the ordering by adding - at the beginning:&#10;&lt;pre&gt;&lt;code&gt;Post.objects.order_by('-created_date')&lt;/code&gt;&lt;/pre&gt;&#10;&#10;In the &lt;code&gt;render&lt;/code&gt; function we have one parameter&#10;&lt;code&gt;request&lt;/code&gt; (everything we receive from the user&#10;via the Internet) and another giving the template file&#10;('blog/post_list.html'). &lt;br/&gt;The last parameter, &lt;code&gt;{}&lt;/code&gt;,&#10;is a place in which we can add some things for the&#10;template to use.&#10;&#10;&lt;h4&gt;Chaining QuerySets&lt;/h4&gt;&#10;You can also combine QuerySets by chaining them together:&#10;&lt;pre&gt;&lt;code&gt; Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')&#10;&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&#10;&lt;h4&gt;Task:&lt;/h4&gt;&#10;Obtain all &lt;code&gt;Post&lt;/code&gt; objects ordered by &lt;code&gt;published_date&lt;/code&gt;&#10;and pass them to the template.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;p style=&quot;color:#808080&quot;&gt;For more information visit &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/intro/tutorial03/&quot;&gt;django documentation&lt;/a&gt;.&#10;&#10;&lt;br&gt;&#10;&lt;/html&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="6" />
                      <option name="name" value="task6" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="324000" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="testsText">
                        <map>
                          <entry key="tests.py" value="from test_helper import failed, passed, get_answer_placeholders, \&#10;    test_is_not_empty, test_answer_placeholders_text_deleted&#10;&#10;&#10;def test_answer_placeholders():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    print(placeholder)&#10;    if &quot;order_by&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Use order_by method&quot;)&#10;&#10;&#10;def test_answer_placeholders1():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if &quot;published_date&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Order posts by published_date&quot;)&#10;&#10;&#10;def test_answer_placeholders2():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if &quot;posts&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Define posts variable&quot;)&#10;&#10;&#10;def test_answer_placeholders3():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[1]&#10;    if &quot;posts&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Pass posts variable to the template&quot;)&#10;&#10;&#10;if __name__ == '__main__':&#10;    test_is_not_empty()&#10;    test_answer_placeholders_text_deleted()&#10;    test_answer_placeholders()&#10;    test_answer_placeholders1()&#10;    test_answer_placeholders2()&#10;    test_answer_placeholders3()&#10;&#10;&#10;" />
                        </map>
                      </option>
                      <option name="updateDate" value="1525784158000" />
                      <option name="taskFiles">
                        <map>
                          <entry key="blog/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/admin.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/admin.py" />
                                <option name="text" value="from django.contrib import admin&#10;&#10;# Register your models here.&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/apps.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/apps.py" />
                                <option name="text" value="from __future__ import unicode_literals&#10;&#10;from django.apps import AppConfig&#10;&#10;&#10;class BlogConfig(AppConfig):&#10;    name = 'blog'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/models.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="37" />
                                          <option name="offset" value="76" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="37" />
                                      <option name="offset" value="76" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="inherit Post from django models.Model" />
                                      <option name="possibleAnswer" value="models.Model" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="inherit Post from django models.Model" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use max_length parameter" />
                                        </list>
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="57" />
                                          <option name="offset" value="164" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="57" />
                                      <option name="offset" value="164" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="1" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define title as a CharField with max length equals to 200" />
                                      <option name="possibleAnswer" value="title = models.CharField(max_length=200)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define title as a CharField with max length equals to 200" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use blank parameter to allow the field to be blank." />
                                          <option value="Use null parameter to make Django store empty values as NULL in the database" />
                                        </list>
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="318" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="40" />
                                      <option name="offset" value="318" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="2" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define published_date as a DateTimeField" />
                                      <option name="possibleAnswer" value="published_date = models.DateTimeField(blank=True, null=True)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="define published_date as a DateTimeField" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/models.py" />
                                <option name="text" value="from django.db import models&#10;from django.utils import timezone&#10;&#10;&#10;class Post(inherit Post from django models.Model):&#10;    author = models.ForeignKey('auth.User')&#10;    define title as a CharField with max length equals to 200&#10;    text = models.TextField()&#10;    created_date = models.DateTimeField(default=timezone.now)&#10;    define published_date as a DateTimeField&#10;&#10;    def publish(self):&#10;        self.published_date = timezone.now()&#10;        self.save()&#10;&#10;    def __str__(self):&#10;        return self.title&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/templates/blog/post_list.html">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="This text will appear in the title bar of your browser" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="14" />
                                          <option name="offset" value="33" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="14" />
                                      <option name="offset" value="33" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/templates/blog/post_list.html" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task5" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Name your blog" />
                                      <option name="possibleAnswer" value="Django Girls blog" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Name your blog" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="120" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="120" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/templates/blog/post_list.html" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="1" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task5" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Repeat your blog name" />
                                      <option name="possibleAnswer" value="Django Girls blog" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Repeat your blog name" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="24" />
                                          <option name="offset" value="175" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="24" />
                                      <option name="offset" value="175" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/templates/blog/post_list.html" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="2" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task5" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Add your first post here" />
                                      <option name="possibleAnswer" value="&lt;div&gt;&#10;            &lt;p&gt;published: 14.06.2014, 12:14&lt;/p&gt;&#10;            &lt;h2&gt;&lt;a href=&quot;&quot;&gt;My first post&lt;/a&gt;&lt;/h2&gt;&#10;            &lt;p&gt;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;&#10;        &lt;/div&gt;" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Add your first post here" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/templates/blog/post_list.html" />
                                <option name="text" value="&lt;html&gt;&#10;    &lt;head&gt;&#10;        &lt;title&gt;Name your blog&lt;/title&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;&#10;        &lt;div&gt;&#10;            &lt;h1&gt;&lt;a href=&quot;&quot;&gt;Repeat your blog name&lt;/a&gt;&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        Add your first post here&#10;    &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use '^$' to match empty string" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="52" />
                                          <option name="offset" value="74" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="52" />
                                      <option name="offset" value="74" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/urls.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task3" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Map pattern for empty string to post_list from views" />
                                      <option name="possibleAnswer" value="url(r'^$', views.post_list, name='post_list')," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="Map pattern for empty string to post_list from views" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/urls.py" />
                                <option name="text" value="from django.conf.urls import url&#10;from . import views&#10;&#10;urlpatterns = [&#10;    Map pattern for empty string to post_list from views&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/views.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use ordered_by function on Post.objects.all() object" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="39" />
                                          <option name="offset" value="92" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="39" />
                                      <option name="offset" value="92" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="get all posts ordered by published_date" />
                                      <option name="possibleAnswer" value="posts = Post.objects.order_by('published_date')" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="get all posts ordered by published_date" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="43" />
                                          <option name="offset" value="160" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="43" />
                                      <option name="offset" value="160" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/views.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task4" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="pass blog/post_list.html template file here" />
                                      <option name="possibleAnswer" value="blog/post_list.html" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="pass blog/post_list.html template file here" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="33" />
                                          <option name="offset" value="207" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="33" />
                                      <option name="offset" value="207" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="pass posts object to the template" />
                                      <option name="possibleAnswer" value="'posts': posts" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="pass posts object to the template" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/views.py" />
                                <option name="text" value="from django.shortcuts import render&#10;&#10;from .models import Post&#10;&#10;&#10;def post_list(request):&#10;    get all posts ordered by published_date&#10;    return render(request, 'pass blog/post_list.html template file here', {pass posts object to the template})&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="manage.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="manage.py" />
                                <option name="text" value="#!/usr/bin/env python&#10;import os&#10;import sys&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;    try:&#10;        from django.core.management import execute_from_command_line&#10;    except ImportError:&#10;        # The above import may fail for some other reason. Ensure that the&#10;        # issue is really that Django is missing to avoid masking other&#10;        # exceptions on Python 2.&#10;        try:&#10;            import django&#10;        except ImportError:&#10;            raise ImportError(&#10;                &quot;Couldn't import Django. Are you sure it's installed and &quot;&#10;                &quot;available on your PYTHONPATH environment variable? Did you &quot;&#10;                &quot;forget to activate a virtual environment?&quot;&#10;            )&#10;        raise&#10;    execute_from_command_line(sys.argv)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/settings.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="For instance, 'Europe/Berlin'" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="2925" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="2925" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="mysite/settings.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task3" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="use correct time zone" />
                                      <option name="possibleAnswer" value="UTC" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" value="use correct time zone" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/settings.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;Django settings for mysite project.&#10;&#10;Generated by 'django-admin startproject' using Django 1.10.3.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/topics/settings/&#10;&#10;For the full list of settings and their values, see&#10;https://docs.djangoproject.com/en/1.10/ref/settings/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Build paths inside the project like this: os.path.join(BASE_DIR, ...)&#10;BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))&#10;&#10;&#10;# Quick-start development settings - unsuitable for production&#10;# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/&#10;&#10;# SECURITY WARNING: keep the secret key used in production secret!&#10;SECRET_KEY = '-^c-ih(z2-7ze$jmth7bx+$=r&amp;k@kl=9zm%iuopp7i&amp;l0*#1ah'&#10;&#10;# SECURITY WARNING: don't run with debug turned on in production!&#10;DEBUG = True&#10;&#10;ALLOWED_HOSTS = []&#10;&#10;&#10;# Application definition&#10;&#10;INSTALLED_APPS = [&#10;    'django.contrib.admin',&#10;    'django.contrib.auth',&#10;    'django.contrib.contenttypes',&#10;    'django.contrib.sessions',&#10;    'django.contrib.messages',&#10;    'django.contrib.staticfiles',&#10;    'blog',&#10;]&#10;&#10;MIDDLEWARE = [&#10;    'django.middleware.security.SecurityMiddleware',&#10;    'django.contrib.sessions.middleware.SessionMiddleware',&#10;    'django.middleware.common.CommonMiddleware',&#10;    'django.middleware.csrf.CsrfViewMiddleware',&#10;    'django.contrib.auth.middleware.AuthenticationMiddleware',&#10;    'django.contrib.messages.middleware.MessageMiddleware',&#10;    'django.middleware.clickjacking.XFrameOptionsMiddleware',&#10;]&#10;&#10;ROOT_URLCONF = 'mysite.urls'&#10;&#10;TEMPLATES = [&#10;    {&#10;        'BACKEND': 'django.template.backends.django.DjangoTemplates',&#10;        'DIRS': [],&#10;        'APP_DIRS': True,&#10;        'OPTIONS': {&#10;            'context_processors': [&#10;                'django.template.context_processors.debug',&#10;                'django.template.context_processors.request',&#10;                'django.contrib.auth.context_processors.auth',&#10;                'django.contrib.messages.context_processors.messages',&#10;            ],&#10;        },&#10;    },&#10;]&#10;&#10;WSGI_APPLICATION = 'mysite.wsgi.application'&#10;&#10;&#10;# Database&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#databases&#10;&#10;DATABASES = {&#10;    'default': {&#10;        'ENGINE': 'django.db.backends.sqlite3',&#10;        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),&#10;    }&#10;}&#10;&#10;&#10;# Password validation&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators&#10;&#10;AUTH_PASSWORD_VALIDATORS = [&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',&#10;    },&#10;]&#10;&#10;&#10;# Internationalization&#10;# https://docs.djangoproject.com/en/1.10/topics/i18n/&#10;&#10;LANGUAGE_CODE = 'en-us'&#10;&#10;TIME_ZONE = 'use correct time zone'&#10;&#10;USE_I18N = True&#10;&#10;USE_L10N = True&#10;&#10;USE_TZ = True&#10;&#10;&#10;# Static files (CSS, JavaScript, Images)&#10;# https://docs.djangoproject.com/en/1.10/howto/static-files/&#10;&#10;STATIC_URL = '/static/'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/wsgi.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/wsgi.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;WSGI config for mysite project.&#10;&#10;It exposes the WSGI callable as a module-level variable named ``application``.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;from django.core.wsgi import get_wsgi_application&#10;&#10;os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;&#10;application = get_wsgi_application()&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </EduTask>
                    <EduTask>
                      <option name="additionalFiles">
                        <map />
                      </option>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&lt;h3&gt;Django template language&lt;/h3&gt;&#10;A Django template is simply a text document or a Python string marked-up using the Django template language. Some constructs are recognized and interpreted by the template engine. The main ones are variables and tags.&#10;&lt;br/&gt;&lt;br/&gt;&#10;A template is rendered with a context. Rendering replaces variables with their values, which are looked up in the context, and executes tags. Everything else is output as is.&#10;&#10;&lt;h4&gt;Variables&lt;/h4&gt;&#10;A variable outputs a value from the context, which is a&#10;dict-like object mapping keys to values.&#10;&lt;br/&gt;&lt;br/&gt;&#10;Variables are surrounded by &lt;code&gt;{{&lt;/code&gt; and }} like this:&#10;&lt;br/&gt;&lt;br/&gt;&#10;&lt;div style=&quot;background-color:#d3d3d3;&quot;&gt;My first name is {{ first_name }}. My last name is {{ last_name }}.&lt;/div&gt;&#10;&lt;br/&gt;&#10;With a context of &lt;code&gt;{'first_name': 'John', 'last_name': 'Doe'}&lt;/code&gt;,&#10;this template renders to:&lt;br/&gt;&#10;&lt;br/&gt;&#10;&lt;div style=&quot;background-color:#d3d3d3;&quot;&gt;&#10;My first name is John. My last name is Doe.&#10;&lt;/div&gt;&#10;&lt;h4&gt;Tags&lt;/h4&gt;&#10;&#10;Tags provide arbitrary logic in the rendering process.&#10;&#10;&lt;br/&gt;&lt;br/&gt;&#10;Tags are surrounded by {% and %} like this:&#10;&lt;br/&gt;&lt;br/&gt;&#10;&lt;div style=&quot;background-color:#d3d3d3;&quot;&gt;&#10;{% if user.is_authenticated %}Hello, {{ user.username }}.{% endif %}&#10;&lt;/div&gt;&#10;&#10;&lt;h4&gt;Task:&lt;/h4&gt;&#10;Iterate over posts using {% for ... in ...%} {% endfor %}&#10;and print each post content.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;p style=&quot;color:#808080&quot;&gt;For more information visit &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/intro/tutorial03/&quot;&gt;django documentation&lt;/a&gt;.&#10;&#10;&lt;br&gt;&#10;&lt;/html&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="7" />
                      <option name="name" value="task7" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="324001" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="testsText">
                        <map>
                          <entry key="tests.py" value="from test_helper import run_common_tests, failed, passed, get_answer_placeholders&#10;&#10;&#10;def test_answer_placeholders():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if &quot;{%&quot; in placeholder and &quot;%}&quot; in placeholder and &quot;for&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Use '{% for ... in ... %}' tag&quot;)&#10;&#10;&#10;def test_answer_placeholders1():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if &quot;{%&quot; in placeholder and &quot;%}&quot; in placeholder and &quot;endfor&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Don't forget to close for tag&quot;)&#10;&#10;&#10;def test_answer_placeholders2():&#10;    placeholders = get_answer_placeholders()&#10;    placeholder = placeholders[0]&#10;    if &quot;{{&quot; in placeholder and &quot;}}&quot; in placeholder and &quot;post&quot; in placeholder:&#10;        passed()&#10;    else:&#10;        failed(&quot;Use {{ post }} to print post content&quot;)&#10;&#10;&#10;if __name__ == '__main__':&#10;    run_common_tests()&#10;    test_answer_placeholders()&#10;    test_answer_placeholders1()&#10;    test_answer_placeholders2()&#10;&#10;&#10;" />
                        </map>
                      </option>
                      <option name="updateDate" value="1525784160000" />
                      <option name="taskFiles">
                        <map>
                          <entry key="blog/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/admin.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/admin.py" />
                                <option name="text" value="from django.contrib import admin&#10;&#10;# Register your models here.&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/apps.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/apps.py" />
                                <option name="text" value="from __future__ import unicode_literals&#10;&#10;from django.apps import AppConfig&#10;&#10;&#10;class BlogConfig(AppConfig):&#10;    name = 'blog'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/models.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="37" />
                                          <option name="offset" value="76" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="37" />
                                      <option name="offset" value="76" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="inherit Post from django models.Model" />
                                      <option name="possibleAnswer" value="models.Model" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use max_length parameter" />
                                        </list>
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="57" />
                                          <option name="offset" value="164" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="57" />
                                      <option name="offset" value="164" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="1" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define title as a CharField with max length equals to 200" />
                                      <option name="possibleAnswer" value="title = models.CharField(max_length=200)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use blank parameter to allow the field to be blank." />
                                          <option value="Use null parameter to make Django store empty values as NULL in the database" />
                                        </list>
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="318" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="40" />
                                      <option name="offset" value="318" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/models.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="2" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task2" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="define published_date as a DateTimeField" />
                                      <option name="possibleAnswer" value="published_date = models.DateTimeField(blank=True, null=True)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/models.py" />
                                <option name="text" value="from django.db import models&#10;from django.utils import timezone&#10;&#10;&#10;class Post(inherit Post from django models.Model):&#10;    author = models.ForeignKey('auth.User')&#10;    define title as a CharField with max length equals to 200&#10;    text = models.TextField()&#10;    created_date = models.DateTimeField(default=timezone.now)&#10;    define published_date as a DateTimeField&#10;&#10;    def publish(self):&#10;        self.published_date = timezone.now()&#10;        self.save()&#10;&#10;    def __str__(self):&#10;        return self.title&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/templates/blog/post_list.html">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="This text will appear in the title bar of your browser" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="14" />
                                          <option name="offset" value="33" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="14" />
                                      <option name="offset" value="33" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/templates/blog/post_list.html" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task5" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Name your blog" />
                                      <option name="possibleAnswer" value="Django Girls blog" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="120" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="120" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/templates/blog/post_list.html" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="1" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task5" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Repeat your blog name" />
                                      <option name="possibleAnswer" value="Django Girls blog" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use {% for post in posts %} to iterate over posts" />
                                          <option value="Don't forget about closing tag {% endfor %}" />
                                        </list>
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="23" />
                                          <option name="offset" value="175" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="23" />
                                      <option name="offset" value="175" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="Print each post content" />
                                      <option name="possibleAnswer" value="{% for post in posts %}&#10;            {{ post }}&#10;        {% endfor %}" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/templates/blog/post_list.html" />
                                <option name="text" value="&lt;html&gt;&#10;    &lt;head&gt;&#10;        &lt;title&gt;Name your blog&lt;/title&gt;&#10;    &lt;/head&gt;&#10;    &lt;body&gt;&#10;        &lt;div&gt;&#10;            &lt;h1&gt;&lt;a href=&quot;&quot;&gt;Repeat your blog name&lt;/a&gt;&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        Print each post content&#10;    &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/urls.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use '^$' to match empty string" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="52" />
                                          <option name="offset" value="74" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="52" />
                                      <option name="offset" value="74" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/urls.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task3" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="Map pattern for empty string to post_list from views" />
                                      <option name="possibleAnswer" value="url(r'^$', views.post_list, name='post_list')," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/urls.py" />
                                <option name="text" value="from django.conf.urls import url&#10;from . import views&#10;&#10;urlpatterns = [&#10;    Map pattern for empty string to post_list from views&#10;]&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="blog/views.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="Use ordered_by function on Post.objects.all() object" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="39" />
                                          <option name="offset" value="92" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="39" />
                                      <option name="offset" value="92" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/views.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task6" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="get all posts ordered by published_date" />
                                      <option name="possibleAnswer" value="posts = Post.objects.order_by('published_date')" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="43" />
                                          <option name="offset" value="160" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="43" />
                                      <option name="offset" value="160" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/views.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task4" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="pass blog/post_list.html template file here" />
                                      <option name="possibleAnswer" value="blog/post_list.html" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="33" />
                                          <option name="offset" value="207" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="33" />
                                      <option name="offset" value="207" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="blog/views.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="2" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task6" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="pass posts object to the template" />
                                      <option name="possibleAnswer" value="'posts': posts" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="blog/views.py" />
                                <option name="text" value="from django.shortcuts import render&#10;&#10;from .models import Post&#10;&#10;&#10;def post_list(request):&#10;    get all posts ordered by published_date&#10;    return render(request, 'pass blog/post_list.html template file here', {pass posts object to the template})&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="manage.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="manage.py" />
                                <option name="text" value="#!/usr/bin/env python&#10;import os&#10;import sys&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;    try:&#10;        from django.core.management import execute_from_command_line&#10;    except ImportError:&#10;        # The above import may fail for some other reason. Ensure that the&#10;        # issue is really that Django is missing to avoid masking other&#10;        # exceptions on Python 2.&#10;        try:&#10;            import django&#10;        except ImportError:&#10;            raise ImportError(&#10;                &quot;Couldn't import Django. Are you sure it's installed and &quot;&#10;                &quot;available on your PYTHONPATH environment variable? Did you &quot;&#10;                &quot;forget to activate a virtual environment?&quot;&#10;            )&#10;        raise&#10;    execute_from_command_line(sys.argv)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/__init__.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/__init__.py" />
                                <option name="text" value="" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/settings.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list>
                                          <option value="For instance, 'Europe/Berlin'" />
                                        </list>
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="2925" />
                                        </MyInitialState>
                                      </option>
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="2925" />
                                      <option name="placeholderDependency">
                                        <AnswerPlaceholderDependency>
                                          <option name="fileName" value="mysite/settings.py" />
                                          <option name="lessonName" value="lesson1" />
                                          <option name="placeholderIndex" value="0" />
                                          <option name="sectionName" />
                                          <option name="taskName" value="task3" />
                                          <option name="visible" value="true" />
                                        </AnswerPlaceholderDependency>
                                      </option>
                                      <option name="placeholderText" value="use correct time zone" />
                                      <option name="possibleAnswer" value="UTC" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="true" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/settings.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;Django settings for mysite project.&#10;&#10;Generated by 'django-admin startproject' using Django 1.10.3.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/topics/settings/&#10;&#10;For the full list of settings and their values, see&#10;https://docs.djangoproject.com/en/1.10/ref/settings/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Build paths inside the project like this: os.path.join(BASE_DIR, ...)&#10;BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))&#10;&#10;&#10;# Quick-start development settings - unsuitable for production&#10;# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/&#10;&#10;# SECURITY WARNING: keep the secret key used in production secret!&#10;SECRET_KEY = '-^c-ih(z2-7ze$jmth7bx+$=r&amp;k@kl=9zm%iuopp7i&amp;l0*#1ah'&#10;&#10;# SECURITY WARNING: don't run with debug turned on in production!&#10;DEBUG = True&#10;&#10;ALLOWED_HOSTS = []&#10;&#10;&#10;# Application definition&#10;&#10;INSTALLED_APPS = [&#10;    'django.contrib.admin',&#10;    'django.contrib.auth',&#10;    'django.contrib.contenttypes',&#10;    'django.contrib.sessions',&#10;    'django.contrib.messages',&#10;    'django.contrib.staticfiles',&#10;    'blog',&#10;]&#10;&#10;MIDDLEWARE = [&#10;    'django.middleware.security.SecurityMiddleware',&#10;    'django.contrib.sessions.middleware.SessionMiddleware',&#10;    'django.middleware.common.CommonMiddleware',&#10;    'django.middleware.csrf.CsrfViewMiddleware',&#10;    'django.contrib.auth.middleware.AuthenticationMiddleware',&#10;    'django.contrib.messages.middleware.MessageMiddleware',&#10;    'django.middleware.clickjacking.XFrameOptionsMiddleware',&#10;]&#10;&#10;ROOT_URLCONF = 'mysite.urls'&#10;&#10;TEMPLATES = [&#10;    {&#10;        'BACKEND': 'django.template.backends.django.DjangoTemplates',&#10;        'DIRS': [],&#10;        'APP_DIRS': True,&#10;        'OPTIONS': {&#10;            'context_processors': [&#10;                'django.template.context_processors.debug',&#10;                'django.template.context_processors.request',&#10;                'django.contrib.auth.context_processors.auth',&#10;                'django.contrib.messages.context_processors.messages',&#10;            ],&#10;        },&#10;    },&#10;]&#10;&#10;WSGI_APPLICATION = 'mysite.wsgi.application'&#10;&#10;&#10;# Database&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#databases&#10;&#10;DATABASES = {&#10;    'default': {&#10;        'ENGINE': 'django.db.backends.sqlite3',&#10;        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),&#10;    }&#10;}&#10;&#10;&#10;# Password validation&#10;# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators&#10;&#10;AUTH_PASSWORD_VALIDATORS = [&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',&#10;    },&#10;    {&#10;        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',&#10;    },&#10;]&#10;&#10;&#10;# Internationalization&#10;# https://docs.djangoproject.com/en/1.10/topics/i18n/&#10;&#10;LANGUAGE_CODE = 'en-us'&#10;&#10;TIME_ZONE = 'use correct time zone'&#10;&#10;USE_I18N = True&#10;&#10;USE_L10N = True&#10;&#10;USE_TZ = True&#10;&#10;&#10;# Static files (CSS, JavaScript, Images)&#10;# https://docs.djangoproject.com/en/1.10/howto/static-files/&#10;&#10;STATIC_URL = '/static/'&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="mysite/wsgi.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="mysite/wsgi.py" />
                                <option name="text" value="&quot;&quot;&quot;&#10;WSGI config for mysite project.&#10;&#10;It exposes the WSGI callable as a module-level variable named ``application``.&#10;&#10;For more information on this file, see&#10;https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;from django.core.wsgi import get_wsgi_application&#10;&#10;os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;mysite.settings&quot;)&#10;&#10;application = get_wsgi_application()&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </EduTask>
                  </list>
                </option>
                <option name="unitId" value="0" />
              </FrameworkLesson>
            </list>
          </option>
        </RemoteCourse>
      </option>
      <option name="VERSION" value="9" />
      <option name="myUserTests">
        <map />
      </option>
    </StudyTaskManager>
  </component>
</project>